notas1 <- factor(notas,
levels= c("S","A","N","Sob","MH"))
notas1
notas1[1]
levels(notas1)
str(notas1)
notas1[2]<notas1[3]
notas <- c("S",
"A",
"S",
"MH")
notas
notas[1]
notas1 <- ordered(factor(notas,
levels= c("S","A","N","Sob","MH")))
notas1
notas1[1]
levels(notas1)
str(notas1)
notas1[2]<notas1[3]
alumno1 <- list(nombre = "Luis", no.asignaturas = 4,
nombre.asignaturas = c("Lab1", "Lab2", "Lab3"))
# Escribe lo siguiente
alumno1
alumno1$nombre # acceder al dato nombre
alumno1$nombre.asignaturas # acceder al dato asignaturas
alumno1$nombre.asignaturas[1] # acceder a la primera asignatura
# IMPORTANTE: Ver  la diferencia entre los   siguientes comandos
alumno1[1]
alumno1[[1]]
class(alumno1[1])
class(alumno1[[1]])
class(alumno1$nombre.asignatura[2])
alumno1 <- list(nombre = "Luis", no.asignaturas = 4,
nombre.asignaturas = c("Lab1", "Lab2", "Lab3"))
# Escribe lo siguiente
alumno1
alumno1$nombre # acceder al dato nombre
alumno1$nombre.asignaturas # acceder al dato asignaturas
alumno1$nombre.asignaturas[1] # acceder a la primera asignatura
# IMPORTANTE: Ver  la diferencia entre los   siguientes comandos
alumno1[1]
alumno1[[1]]
class(alumno1[1])
class(alumno1[[1]])
class(alumno1$nombre.asignatura[2])
alumno1$nombre.asignatura[2]
alumno1 <- list(nombre = "Luis", no.asignaturas = 4,
nombre.asignaturas = c("Lab1", "Lab2", "Lab3"))
# Escribe lo siguiente
alumno1
alumno1$nombre # acceder al dato nombre
alumno1$nombre.asignaturas # acceder al dato asignaturas
alumno1$nombre.asignaturas[1] # acceder a la primera asignatura
# IMPORTANTE: Ver  la diferencia entre los   siguientes comandos
alumno1[1]
alumno1[[1]]
class(alumno1[1])
class(alumno1[[1]])
class(alumno1$nombre.asignatura[2])
alumno1$nombre.asignatura[2]
alumno1[3][2]
alumno1 <- list(nombre = "Luis", no.asignaturas = 4,
nombre.asignaturas = c("Lab1", "Lab2", "Lab3"))
# Escribe lo siguiente
alumno1
alumno1$nombre # acceder al dato nombre
alumno1$nombre.asignaturas # acceder al dato asignaturas
alumno1$nombre.asignaturas[1] # acceder a la primera asignatura
# IMPORTANTE: Ver  la diferencia entre los   siguientes comandos
alumno1[1]
alumno1[[1]]
class(alumno1[1])
class(alumno1[[1]])
class(alumno1$nombre.asignatura[2])
alumno1$nombre.asignatura[2]
alumno1[3]
alumno1 <- list(nombre = "Luis", no.asignaturas = 4,
nombre.asignaturas = c("Lab1", "Lab2", "Lab3"))
# Escribe lo siguiente
alumno1
alumno1$nombre # acceder al dato nombre
alumno1$nombre.asignaturas # acceder al dato asignaturas
alumno1$nombre.asignaturas[1] # acceder a la primera asignatura
# IMPORTANTE: Ver  la diferencia entre los   siguientes comandos
alumno1[1]
alumno1[[1]]
class(alumno1[1])
class(alumno1[[1]])
class(alumno1$nombre.asignatura[2])
alumno1$nombre.asignatura[2]
alumno1[3]
alumno1[[3]][2]
unlist("javi")
M1 <- matrix(1:6, nrow = 2, ncol = 4)
M1 <- matrix(1:7,2,3)
M2 <- c(1,2,3) + M1;M2
M1 <- matrix(1:6,2,3)
M2 <- c(1,2,3) + M1;M2
M1 <- matrix(1:6,2,3);M1
M2 <- c(1,2,3) + M1;M2
duh
duh <- 5
data("UKgas")
consumo.de.gas <- UKgas
consumo.de.gas <- UKgas
consumo.de.gas <- UKgas;consumo.de.gas
consumo.de.gas[1:10]
consumo.de.gas[c(TRUE,FALSE)]
consumo.de.gas[c(TRUE,FALSE,FALSE)]
consumo.de.gas[:1]
consumo.de.gas[length(consumo.de.gas):1]
consumo.de.gas[1:50][-c(1,3,5)]
consumo.de.gas + 1
consumo.de.gas[1:10] + c(1,2,3)
v2 <- c(1,2,3)
consumo.de.gas[1:10] + v2
v2 <- c(1,2,3)
# v2 <- 1:3
consumo.de.gas < 50
v2 <- c(1,2,3)
# v2 <- 1:3
consumo.de.gas[consumo.de.gas < 50]
v2 <- c(1,2,3)
# v2 <- 1:3
consumo.de.gas[index(consumo.de.gas < 50)]
indices <- which(consumo.de.gas < 50);indices
consumo.de.gas[(consumo.de.gas < 50)]
indices <- which(consumo.de.gas < 100);indices
consumo.de.gas[(consumo.de.gas < 50)]
nueva <- c(20,21,NA,22)
consumo.de.gas1 <- c(consumo.de.gas,nueva)
nueva <- c(20,21,NA,22)
consumo.de.gas1 <- c(consumo.de.gas,nueva)
consumo.de.gas1
nueva <- c(20,21,NA,22)
consumo.de.gas2 <- c(consumo.de.gas,20,21,NA,22)
consumo.de.gas2
nueva <- c(20,21,NA,22)
consumo.de.gas2 <- c((consumo.de.gas,20,21,NA,22))
which(is.na(consumo.de.gas1))
consumo.de.gas1 == NA NOOOOO
consumo.de.gas1 == NA
which(is.na(consumo.de.gas1))
mean(consumo.de.gas1, na.rm = TRUE)
media <- mean(consumo.de.gas1,na.rm= TRUE)
indices2 <- which(consumo.de.gas1)
media <- mean(consumo.de.gas1,na.rm= TRUE);media
indices2 <- which(consumo.de.gas1 >media);indices2
mean(consumo.de.gas1[indices2])
media <- mean(consumo.de.gas1,na.rm= TRUE);media
indices2 <- which(consumo.de.gas1 >media);indices2
consumo.de.gas1[indices2]
mean(consumo.de.gas1[indices2])
indices3 <- which(is.na(consumo.de.gas1))
consumo.de.gas1[indices3] <- 0
indices3 <- which(is.na(consumo.de.gas1))
consumo.de.gas1[indices3] <- 0; consumo.de.gas1
install.packages("Matrix")
Diagonal <- Diagonal(m)
m
d <- Matrix:::diag(M)
M <- matrix(1:9,nrow = 3,byrow = TRUE)
M
# instalar Matrix
library(Matrix)
M <- matrix(1:9,nrow = 3,byrow = TRUE)
M
d <- Matrix:::diag(M)
d
install.packages("pracma")
# instalar Matrix
library(Matrix)
M <- matrix(1:9,nrow = 3,byrow = TRUE)
M
d <- Matrix:::diag(M)
d
Diagonal <- Matrix:::Diagonal(3,d)
Diagonal
library(pracma)
ld
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
L
R
source("~/.active-rstudio-document", echo=TRUE)
M1 <- divido_matriz(M)
M1
divido_matriz <- function(M){
tam <- dim(M)[1]
D <- diag(diag(M))
L <- M
R <- M
L[!lower.tri(M,diag = FALSE)] <- 0
R[!upper.tri(M,diag = FALSE)] <- 0
return (list(diagonal= D,superior= R, inferior= L,tamaño= tam))
}#end function
M1 <- divido_matriz(M)
M1
# instalar Matrix
library(Matrix)
M <- matrix(1:9,nrow = 3,byrow = TRUE)
M
d <- Matrix:::diag(M)
d
Diagonal <- Matrix:::Diagonal(3,d)
Diagonal
d <- Matrix:::diag(M)
d
Diagonal <- Matrix:::Diagonal(3,d)
Diagonal
Notas <-  list(alumno1= c(2,5,3,7,6),alumno2= c(5,6,7,10))
Notas
medias <- lapply(Notas, mean)
medias
Notas <-  list(alumno1= c(2,5,3,7,6),alumno2= c(5,6,7,10))
Notas
medias <- lapply(Notas, mean)
medias
class(medias)
medias <- lapply(Notas,function(x) min(x)+1);medias
install.packages("stringr")
install.packages("glue")
install.packages("markdown")
install.packages("pandoc")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
data("ChickWeight")
head(ChickWeight)
data("ChickWeight")
head(ChickWeight)
media <- sapply(ChickWeight,mean);mean
media <- sapply(ChickWeight,mean);media
m <- sapply(ChickWeight[,1:2],mean);m
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x),mas_que_media(x)))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x),mas_que_media =mas_que_media(x)))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
sapply(L, function(x)
c(media= mean(x),
valor_mínimo= min(x),
valor_máximo= max(x),
mas_que_media =mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
sapply(L, function(x)
c(media= mean(x),
valor_mínimo= min(x),
valor_máximo= max(x),
mas_que_media =mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x),mas_que_media =mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x),mas_que_media =mas_que_media(x)))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x),mas_que_media =mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}))
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x),mas_que_media =mas_que_media(x)))
knitr::opts_chunk$set(echo = TRUE)
data("ChickWeight")
head(ChickWeight)
L <- ChickWeight[,1:2]
m <- sapply(L,mean);m
min <- sapply(L, min);min
max <- sapply(L, max);max
mas_que_media <- function(x){
media <- mean(x, na.rm= TRUE)
num <- sum(x>media)
return (num)
}
sapply(L, function(x) c(media= mean(x),valor_mínimo= min(x),valor_máximo= max(x),mas_que_media =mas_que_media(x)))
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/DatasetAnalysis.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/DatasetAnalysis.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/DatasetAnalysis.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/DatasetAnalysis.R", echo=TRUE)
View(b2)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/DatasetAnalysis.R", echo=TRUE)
View(b2)
b3 <-  breast.cancer |>
mutate(dist_grado_peor == 4-deg_malig)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/DatasetAnalysis.R", echo=TRUE)
b3 <-  breast.cancer |>
mutate(dist_grado_peor = 4-deg_malig)
b3
View(b3)
Cyber.Security.Breaches <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/Teoría/DataSet/Cyber Security Breaches.csv", comment.char="#")
View(Cyber.Security.Breaches)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
View(b3)
n_datos <- colnames(Cyber.Security.Breaches)
n_datos
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/CyberExercises.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/Ejercicios/Dplyr/Breast_Cancer.R", echo=TRUE)
View(breast.cancer)
# reordenar el dataset según el tamaño del tumor
breast.cancer |> arrange(desc(breast.cancer$tumor_size))
breast.cancer |> arrange(desc(breast.cancer$tumor_size), desc(breast.cancer$irradiat))
v <- seq(from=2, to=3, by=0.1)
dim(v)
v <- seq(from=2, to=3, by=0.1)
dim(v)
v
shape(v)
v[2]
length(v)
n <- "2"
n <- "2"
is.integer(as.numeric(n))
is.atomic(as.numeric(n))
class(is.numeric(n))
n <- "2"
is.integer(as.numeric(n))
is.atomic(as.numeric(n))
class(is.numeric(n))
as.numeric(n)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/Ejercicio1_evaluable.R", echo=TRUE)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/Ejercicio1_evaluable.R", echo=TRUE)
Cyber.Security.Breaches <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/Cyber Security Breaches.csv", comment.char="#")
View(Cyber.Security.Breaches)
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/Ejercicio1_evaluable.R", echo=TRUE)
diff_states
yber.Security.Breaches$State |> unique()
Cyber.Security.Breaches$State |> unique()
El dataset Cyber Security Breaches Data está en el CV. Carga en R:
entidades <- Cyber.Security.Breaches |>
group_by(Cyber.Security.Breaches$Type_of_Breach) |>
summarise(n= n()) |>
arrange(asc(n))
entidades <- Cyber.Security.Breaches |>
group_by(Cyber.Security.Breaches$Type_of_Breach) |>
summarise(n= n()) |>
arrange(desc(n))
entidades <- Cyber.Security.Breaches |>
group_by(Cyber.Security.Breaches$Type_of_Breach) |>
summarise(n= n()) |>
arrange(desc(n))
entidades
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/LCC/Ejercicio1_evaluable.R", echo=TRUE)
entidades[[1]][2]
entidades[[2]][2]
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure" ||
Type_of_Breach==Hacking/IT Incident)
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure" or
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure",
Type_of_Breach==Hacking/IT Incident)
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure" |
Type_of_Breach=="Hacking/IT Incident")
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure" |
Type_of_Breach=="Hacking/IT Incident") |>
group_by(Type_of_Breach) |>
summarise(total = Individuals_Affected, media = mean(Individuals_Affected))
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure, Hacking/IT Incident") |>
group_by(Type_of_Breach) |>
summarise(total = Individuals_Affected, media = mean(Individuals_Affected))
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure, Hacking/IT Incident") |>
group_by(Type_of_Breach) |>mean(Individuals_Affected)
Cyber.Security.Breaches |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure, Hacking/IT Incident")
Cyber.Security.Breaches |>
group_by(Type_of_Breach) |>
filter(Cyber.Security.Breaches$Type_of_Breach== "Unauthorized Access/Disclosure, Hacking/IT Incident") |>
mean(Individuals_Affected)
Cyber.Security.Breaches |>
group_by(Type_of_Breach) |>
filter(Type_of_Breach== "Unauthorized Access/Disclosure, Hacking/IT Incident") |>
summarise(mean(Individuals_Affected))
media <- Cyber.Security.Breaches |>
group_by(Type_of_Breach) |>
filter(Type_of_Breach== "Unauthorized Access/Disclosure, Hacking/IT Incident") |>
summarise(mean(Individuals_Affected))
media [[2]][1]
media <- Cyber.Security.Breaches |>
group_by(Type_of_Breach) |>
summarise(maximo = max(Individuals_Affected))|>
arrange(desc(Individuals_Affected))
media <- Cyber.Security.Breaches |>
group_by(Type_of_Breach) |>
summarise(maximo = max(Individuals_Affected))|>
arrange(desc(maximo))
max <- Cyber.Security.Breaches |>
group_by(Type_of_Breach) |>
summarise(maximo = max(Individuals_Affected))|>
arrange(desc(maximo))
max
data("AdultUCI")
str(AdultUCI)
data("AdultUCI")
str(AdultUCI)
AdultUCI$fnlwgt <- NULL
AdultUCI$`education-num` <- NULL
resumen_evolucion_process <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/material_dedalus/DatosSQUAD/resumen_evolucion_process.csv")
View(resumen_evolucion_process)
str(resumen_evolucion_process)
p1 <- resumen_evolucion_process |>
filter(PacienteID==1)
resumen_evolucion_process <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/material_dedalus/DatosSQUAD/resumen_evolucion_process.csv")
str(resumen_evolucion_process)
p1 <- resumen_evolucion_process |>
filter(resumen_evolucion_process$PacienteID==1)
p2 <- resumen_evolucion_process |>
filter(PacienteID==2)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
resumen_pacientes <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/material_dedalus/DatosSQUAD/CSV/resumen_pacientes.csv")
View(resumen_pacientes)
resumen_evolucion_p1 <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/proyecto_conexion_flask_react/backend/datos_pacientes/resumen_evolucion_p1.csv")
View(resumen_evolucion_p1)
resumen_evolucion_p2 <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/proyecto_conexion_flask_react/backend/datos_pacientes/resumen_evolucion_p2.csv")
View(resumen_evolucion_p2)
df_merge <-  merge(resumen_evolucion_p1,resumen_evolucion_p2)
View(df_merge)
df_merge <-  merge(resumen_evolucion_p1,resumen_evolucion_p2,by = "ID")
resumen_evolucion_p1 <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/proyecto_conexion_flask_react/backend/datos_pacientes/resumen_evolucion_p1.csv")
resumen_evolucion_p2 <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/proyecto_conexion_flask_react/backend/datos_pacientes/resumen_evolucion_p2.csv")
df_merge <-  merge(resumen_evolucion_p1,resumen_evolucion_p2, by = "ID")
df_merge <-  merge(resumen_evolucion_p1,resumen_evolucion_p2, by = "PacienteID")
View(df_merge)
resumen_evolucion <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/Gráficas/CSV/resumen_evolucion.csv")
View(resumen_evolucion)
df <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/Gráficas/CSV/resumen_evolucion.csv")
df[is.nan(df)] <- null
View(df)
View(df)
df[is.nan(df)] <- NA
df <- read.csv("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/Gráficas/CSV/resumen_evolucion.csv")
df[is.nan(df)] <- NA
source("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/ReglasDeAsociacion/R/ReglaAsociacionSYMBI.R", echo=TRUE)
setwd("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/ReglasDeAsociacion/R")
setwd("C:/Users/mpord/Documents/3IngSoft/2Cuatri/G4.Dedalus/ReglasDeAsociacion")
